library(shiny); runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
?read.table
runApp('Desktop/june6')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/my_first_r_project.R')
runApp('Desktop/june6')
runApp('Desktop/june6')
?merge
A <- data.frame(x=c(1,2,3,4),y=c(5,6,7,8))
A <- data.frame(x=c(1,2,3,4),y=c(5,6,7,8))
B <- data.frame(x=c(1,2,3,4),z=c(9,10,11,12))
merge(A,B)
source('~/.active-rstudio-document', echo=TRUE)
A <- data.frame(x=c(1,2,3,4),y=c(5,6,7,8))
B <- data.frame(x=c(1,2,3,7,10,22),z=c(9,10,11,12,32,12))
merge(A,B)
merge(A,B,incomparables=T)
merge(A,B,all=T)
runApp('Desktop/june6')
head(A)
melt(A)
install.packages("reshape2")
library(reshape2)
melt(A)
melted <- melt(A)
plot(melted$value, color=melted$variable)
plot(melted$value, col=melted$variable)
?dcast
unmelted <- dcast(melted)
head(melted)
unmelted <- dcast(melted, .~variable, value.var = "value")
unmelted
unmelted <- dcast(melted, ~variable, value.var = "value")
source("https://bioconductor.org/biocLite.R")
biocLite()
read.gct(Achilles_v3.3.8.gct)
read.gct("Achilles_v3.3.8.gct")
read.gct("Achilles_v3.3.8.gct")$data
stuff <- read.gct("Achilles_v3.3.8.gct")$data
install.packages(CePa)
stuff <- read.gct("Achilles_v3.3.8.gct")$data
stuff <- read.gct("Achilles_v3.3.8.gct")
knitr::opts_chunk$set(echo = TRUE)
mat.RNASeq <- read.gct("mat.RNASeq.gct")$data
read.gct <-
function (file) {
expr = read.table(file, skip = 2, header = TRUE, sep = "\t", quote = "")
rownames(expr) = expr[,1]
checkName = table(expr[,1])
if(max(checkName) > 1) {
stop(paste("Genes in gct file should be unique: ", names(which.max(checkName)), sep = " "))
}
expr = expr[,-c(1,2)]
expr = as.matrix(expr)
return(expr)
}
stuff <- read.gct("Achilles_v3.3.8.gct")
source('~/Documents/GitHub/MDAndersonSummerProject/Project1.R', echo=TRUE)
source('~/Documents/GitHub/MDAndersonSummerProject/Project1.R', echo=TRUE)
stuff <- read.gct("/Achilles_v3.3.8.gct")
source('~/Documents/GitHub/MDAndersonSummerProject/Project1.R', echo=TRUE)
source('~/Documents/GitHub/MDAndersonSummerProject/Project1.R', echo=TRUE)
source('~/Documents/GitHub/MDAndersonSummerProject/Project1.R', echo=TRUE)
stuff <- read.gct("Achilles_v3.3.8.gct")
stuff <- read.gct("Achilles_v3.3.8.gct")
source('~/Documents/GitHub/MDAndersonSummerProject/Project1.R', echo=TRUE)
setwd("~/Documents/GitHub/MDAndersonSummerProject/Project1.R")
?setwd
getwd()
setwd("~/Documents/GitHub/MDAndersonSummerProject/")
stuff <- read.gct("Achilles_v3.3.8.gct")
source('~/Documents/GitHub/MDAndersonSummerProject/Project1.R', echo=TRUE)
source('~/Documents/GitHub/MDAndersonSummerProject/Project1.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
source("common2.R")
stuff <- read.gct("Achilles_v3.3.8.gct")
print(stuff)
source("common2.R")
stuff <- read.gct("Achilles_v3.3.8.gct")
print(stuff)
source("common2.R")
stuff <- read.gct("Achilles_v3.3.8.gct")$data
print(stuff)
source("common2.R")
stuff <- read.gct("Achilles_v3.3.8_rawreadcounts.gct")$data
source("common2.R")
stuff <- read.gct("Achilles_v3.3.8_rawreadcounts.gct")
source("common2.R")
stuff <- read.gct("Achilles_v3.3.8_rawreadcounts.gct")
print(stuff)
source("common2.R")
#stuff <- read.gct("CCLE_Expression_Entrez_2012-09-29.gct")$data
stuff <- read.table("CCLE_copynumber_byGene_2013-12-03.txt", sep ="\t")
print(head(stuff,10))
mat.cnv <- read.gct("mat.CNV.gct")$data
mat.cnv <- get.small(mat.cnv)
head(mat.cnv)
mat.cnv[1:10,1:10]
